import pyproj, itertools
from reedsolo import RSCodec, ReedSolomonError
from crc import Calculator, Configuration
from pandas.io import clipboard


def rs(data):
	b=bytes([0]*99+list(itertools.islice(data,0,len(data),2))[::-1])
	b1=bytes([0]*99+list(itertools.islice(data,1,len(data),2))[::-1])

	rsc = RSCodec(24)
	enc=rsc.encode(b)
	enc1=rsc.encode(b1)
	return list(enc1[-24:]+enc[-24:])[::-1]

data=[0x93,0xDF,0x1A,0x60,0x17,0xE7,0x24,0x9A,0x40,0xFF,0xDB,0x43,0x12,0x60,0x49,0x83,#0x000
    0xF8,0x46,0x19,0xEA,0xAF,0x88,0xBB,0x2F,0xB5,0x09,0xE4,0xB9,0xE4,0x71,0xB3,0xB2,#0x010
    0x37,0xCE,0xFE,0xBD,0x17,0xBA,0x5F,0x7B,0xFF,0x5F,0x41,0x87,0xD9,0xF8,0xBF,0xA5,#0x020
    0x20,0x89,0x3B,0xB4,0x0F,0x79,0x28,0xD0,0x1A,0x48,0x41,0x4C,0x46,0x57,0x49,0x4E,#0x030
    0x47,0x1C,0x00,0x04,0x00,0x00,0x00,0x1D,0x51,0x00,0xE8,0x03,0x00,0x32,0x1D,0x00,#0x040
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x66,#0x050
    0x5C,0x7A,0x2A,0x00,0x00,0x00,0x33,0xF3,0x01,0xA8,0xD3,0x02,0x64,0x3B,0x07,0x3F,#0x060
    0x3B,0x07,0x82,0x42,0x08,0x00,0x00,0x00,0x35,0xF3,0x01,0xA8,0xD3,0x02,0x00,0x00,#0x070
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xD5,0xC1,0x7C,#0x080
    0x1E,0x01,0x09,0xA0,0xAB,0x15,0x0D,0x12,0x8A,0x19,0x88,0x14,0x80,0x1C,0x85,0x05,#0x090
    0x80,0x1D,0x80,0x10,0x80,0x1A,0x84,0x1F,0x81,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xB8,#0x0A0
    0xE3,0x7D,0x59,0xC1,0x86,0x42,0x01,0xFF,0x0E,0x45,0x0F,0x01,0xE0,0x89,0xFF,0xA8,#0x0B0
    0xEF,0xAD,0x0B,0x6A,0x0F,0x01,0x77,0x4F,0x25,0x15,0x5D,0x86,0x00,0xB6,0xC7,0x4C,#0x0C0
    0x05,0xCA,0xE1,0x00,0xBB,0xFE,0x47,0x0F,0x5E,0xDF,0xFF,0x65,0xA7,0xEF,0x00,0x61,#0x0D0
    0xA7,0x00,0x7C,0xA2,0x4D,0x0E,0xDA,0x2C,0xFF,0x1F,0x00,0x00,0x00,0xEC,0x8D,0xFF,#0x0E0
    0xBB,0xC9,0x1E,0x02,0x03,0x6A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,#0x0F0
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xEC,0x61,0x7B,0x15,#0x100
    0x4A,0x40,0xA7,0x1A,0xA2,0x60,0x92,0x03,0x6D,0xD8,0xC8,0x1A,0xC6,0xFF,0xF8,0xFF,#0x110
    0x05,0x00,0x08,0x0C,0x18,0xC1,0xB1,0x76,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,#0x120
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xEC,0xC7,]

#Vaisala: 
lat=60.281486
lon=24.876274
alt=0
id='V4154740'

rsc = RSCodec(24)
transformer = pyproj.Transformer.from_crs(
    {"proj":'latlong', "ellps":'WGS84', "datum":'WGS84'},
    {"proj":'geocent', "ellps":'WGS84', "datum":'WGS84'},
    )

x,y,z = [int(a*100) for a in transformer.transform(lon,lat,alt,radians=False)]
ecefData=list(x.to_bytes(4,'little')+y.to_bytes(4,'little')+z.to_bytes(4,'little'))
print(ecefData)
print(f'frame: {data[52]:02X}')

configuration=Configuration(width=16,polynomial=0x1021,init_value=0xFFFF,
	final_xor_value=0,reverse_input=False,reverse_output=False)
calculator = Calculator(configuration)
i = 53
res=[data[52]]
while i<316:
    res+=data[i:i+2]
    blockLength=data[i+1]
    blockType=data[i]
    print(f'block {blockType:02X} ({blockLength} byte) ',end='')
    i+=2
    crc16=calculator.checksum(bytes(data[i:i+blockLength]))
    n=0
    while n<blockLength:
        print(f'{data[i]:02X} ',end='')
        if blockType==0x79 and n>=2 and n<10:
            res.append(ord(id[n-2]))
        elif blockType==0x7B and n<12:
            res.append(ecefData[n])
        else:
            res.append(data[i])
        n+=1
        i+=1
    print(f'\n\tCRC: {data[i+1]:02X}{data[i]:02X} {crc16:04X}')
    crc16=calculator.checksum(bytes(res[i-52-blockLength:i-52]))
    res+=[crc16 & 0xFF,crc16 >>8]
    i+=2

res=[0x93,0xDF,0x1A,0x60]+rs(res)+res

n=0;
s=''
for i in res:
    s+=f'0x{i:02X},'
    print(f'0x{i:02X}',end=',')
    n+=1
    if n==16:
        print()
        s+='\r\n'
        n=0
print()
clipboard.copy(s)